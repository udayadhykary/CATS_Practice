longer_women <- filter(women, weight ==170)
ggplot(women)
ggplot2(women)
library(tidyverse)
library(modeldata)
install.packages("modeldata")
?crickets
?crickets
view(crickets)
library(tidyverse)
library(model)
library(modeldata)
datasets
view(datasets)
view(crickets)
ggplot(crickets)
ggplot(crickets, aes(x = temp, y = rate)) + geom_point()
+ labs(x ="temperature", title = "cricket chirps", caption ="mcdoland")
+ labs(x = "temperature", y= "chirp rate", title = "cricket chirps", caption ="mcdoland")
+ labs(x = "temperature", y= "chirp rate", title = "cricket chirps", caption = 'mcdoland')
ggplot(crickets, aes(x = temp, y = rate)) + geom_point()+
labs(x = "temperature",
y= "chirp rate",
title = "cricket chirps",
caption = 'mcdoland'))
ggplot(crickets, aes(x = temp, y = rate)) + geom_point()+
labs(x = "temperature",
y= "chirp rate",
title = "cricket chirps",
caption = 'mcdoland')
color= species) + geom_point()+
color= species)) + geom_point()+
y = rate,
ggplot(crickets, aes(x = temp,
y = rate,
color= species)) + geom_point()+
labs(x = "temperature",
y= "chirp rate",
title = "cricket chirps",
caption = 'mcdoland')
ggplot(crickets, aes(x = temp,
y = rate,
color= species)) + geom_point()+
labs(x = "temperature",
y= "chirp rate",
color = "Species",
title = "cricket chirps",
caption = 'mcdoland')
ggplot(crickets, aes(x = rate)) +
geom_histogram(bins = 15)
ggplot(crickets, aes(x = rate)) +
geom_freqpoly(bins = 15)
library(tidyverse)
library(tidytuesdayR)
install.packages(tidytuesdayR)
install.packages("tidytuesdayR")
tuesdata <- tidytuesdayR::tt_load('2021-09-14')
billboard <- tuesdata$billboard
audio <- tuesdata$audio_features
view(billboard)
View(billboard)
View(audio)
source("~/.active-rstudio-document", echo=TRUE)
bb1 <- billborard %>%
mutate (no1 = (peak_position == 1))
bb1 <- billboard %>%
mutate (no1 = (peak_position == 1))
bb1
getwd()
library(shiny)
library(shiny)
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
shiny::runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/shiny')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/practice/shiny/sliderInput')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/practice/shiny/textInput')
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/practice/shiny/RadioButtons')
example()
runExample()
runExample(" 01_hello")
runExample(" 01_hello")
runExample("01_hello")
runExample("02_text")
runApp('C:/Users/udaya/OneDrive/Desktop/CATS/CATS_Practice/practice/shiny/heram.r')
library(shiny)
ui<- fluidPage(
titlePanel("Demostration of sliderInput widget in shiny"),
sidebarLayout(
sidebarPanel(
sliderInput("slide", "Select the value from Slider", min = 0, max=5, value=2, step=0.2)
),
mainPanel(
textOutput("out")
)
)
)
server<- function(input, output){
output$out <- renderText(
paste("You selected the value: ", input$slide))
}
shinyApp(ui=ui, server=server)
output$out1 <- renderText(
paste("You selected the value: ", input$slide1))
library(shiny)
ui<- fluidPage(
titlePanel("Practicing sliderInput widget in R Shiny"),
sidebarLayout(
sidebarPanel(
sliderInput("slide1", "Select the value from Slider", min = 0, max=50, value=20, step=2)
),
mainPanel(
textOutput("out1")
)
)
)
server<- function(input, output){
output$out1 <- renderText(
paste("You selected the value: ", input$slide1))
}
shinyApp(ui=ui, server=server)
output$out2 <- renderText(
paste("You selected the value: ", input$slide2))
library(shiny)
ui<- fluidPage(
titlePanel("Practicing sliderInput widget in R Shiny"),
sidebarLayout(
sidebarPanel(
sliderInput("slide1", "Select the value from Slider", min = 0, max=50, value=20, step=2),
sliderInput("slide2", "Select the value from Slider", min = 0, max=5, value=2, step=0.2)
),
mainPanel(
textOutput("out1"),
textOutput("out2")
)
)
)
server<- function(input, output){
output$out1 <- renderText(
paste("You selected the value: ", input$slide1))
output$out2 <- renderText(
paste("You selected the value: ", input$slide2))
}
shinyApp(ui=ui, server=server)
runApp('C:/Users/udaya/OneDrive/Desktop/sliderInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/sliderInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/sliderInput.R')
library(shiny); runApp('C:/Users/udaya/OneDrive/Desktop/selectInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/selectInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/selectInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/selectInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/selectInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/selectInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/selectInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/plot.R')
runApp('C:/Users/udaya/OneDrive/Desktop/plot.R')
library(shiny)
shinyUI(fluidPage(
titlePanel("Download PDF with multi plots in Shiny - an example"),
sidebarLayout(
sidebarPanel(
downloadButton(outputId = "down", label = "Download the plot")
),
mainPanel()
)
library(ggplot2)
library(ggplot2)
library(gridExtra)
shinyServer(function(input,output)({
# downloadHandler contains 2 arguments as functions, namely filename, content
output$down <- downloadHandler(
filename =  function() {
paste("multiplot.pdf")
},
# content is a function with argument file. content writes the plot to the device
content = function(file) {
pdf(file) # open the pdf device
## Plot multiple using par for multi-plots
# par(mfrow=c(1,2))
# layout(matrix(c(1,2), nrow=1, ncol = 2))
# print(ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point())
# print(ggplot(mtcars, aes(x=factor(am), y=mpg)) + geom_boxplot())
## Uncomment the below if you want to experiment with base plot system
# plot(mtcars$mpg, mtcars$cyl)
# plot(mtcars$cyl, mtcars$hp)
# grid.table(iris)
# m <- matrix(c(1, 0, 1,  3, 2, 3, 2, 0), nrow = 2, ncol = 4)
##set up the plot
# layout(m)
## now put out the 3 plots to each layout "panel"
# plot(1:10, main = "plot1")
# plot(10:1, main = "plot2")
# plot(rnorm(10), main = "plot3")
p1 = ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point()
p2 = ggplot(mtcars, aes(x=factor(am), y=mpg)) + geom_boxplot()
# p3 = print(ggplot(mtcars, aes(x=wt, y=mpg)) + geom_point())
arrangeGrob(print(p1), print(p2), ncol = 2, main = "Main title")
dev.off()  # turn the device off
}
)
}))
shinyApp(ui=ui, server=server)
runApp('C:/Users/udaya/OneDrive/Desktop/plot.R')
runApp('C:/Users/udaya/OneDrive/Desktop/plot.R')
runApp('C:/Users/udaya/OneDrive/Desktop/plot.R')
runApp('C:/Users/udaya/OneDrive/Desktop/plot.R')
runApp('C:/Users/udaya/OneDrive/Desktop/plot.R')
runApp('C:/Users/udaya/OneDrive/Desktop/plot.R')
data(iris)
head(iris)
head(mtcars)
ui <- fluidPage(
titlePanel(h4("Practicing renderPlot() using R Shiny using 'mtcars' data", align="center")),
sidebarLayout(
sidebarPanel(
selectInput("var",label = "1.Select the variable you want to Plot:", choices = c("mpg" = 1, "cyl" = 2,"disp" = 3,"hp" = 4, "drat" = 5, "wt" = 6, "qsec" = 7), selected = 1),
),
mainPanel()
)
)
library(shiny)
ui <- fluidPage(
titlePanel(h4("Practicing renderPlot() using R Shiny using 'mtcars' data", align="center")),
sidebarLayout(
sidebarPanel(
selectInput("var",label = "1.Select the variable you want to Plot:", choices = c("mpg" = 1, "cyl" = 2,"disp" = 3,"hp" = 4, "drat" = 5, "wt" = 6, "qsec" = 7), selected = 1),
),
mainPanel()
)
)
server<- function(input, output){
}
shinyApp(ui=ui,server=server)
library(shiny)
ui <- fluidPage(
titlePanel(h4("Practicing renderPlot() using R Shiny using 'mtcars' data", align="center")),
sidebarLayout(
sidebarPanel(
selectInput("var",label = "1.Select the variable you want to Plot:", choices = c("mpg" = 1, "cyl" = 2,"disp" = 3,"hp" = 4, "drat" = 5, "wt" = 6, "qsec" = 7), selected = 1),
sliderInput("bin", "2. Select the number of histogram BINs by sliding the slider", min =5, max =50, value =20),
radioButtons("colour", label ="3. Select the colour of histogram", choices = c("Red","Green","Blue","Yellow"), selected = "Blue")
),
mainPanel()
)
)
server<- function(input, output){
}
shinyApp(ui=ui,server=server)
runApp('C:/Users/udaya/OneDrive/Desktop/learning basic.R')
runApp('C:/Users/udaya/OneDrive/Desktop/learning basic.R')
runApp('C:/Users/udaya/OneDrive/Desktop/learning basic.R')
runApp('C:/Users/udaya/OneDrive/Desktop/learning basic.R')
runApp('C:/Users/udaya/OneDrive/Desktop/learning basic.R')
runApp('C:/Users/udaya/OneDrive/Desktop/learning basic.R')
output$hist <- renderPlot(
{
colm = as.numeric(input$var)
hist(mtcars[,colm], col =input$color, xlim = c(0, max(mtcars[,colm])), main = "Hisogram of mtcars dataset", breaks =seq(0,max(mtcars[,colm]), l =input$bin+1), xlab = names(mtcars[colm]))
}
)
output$hist <- renderPlot(
{
colm = as.numeric(input$var)
hist(mtcars[,colm], col =input$color, xlim = c(0, max(mtcars[,colm])), main = "Hisogram of mtcars dataset", breaks =seq(0,max(mtcars[,colm]), l =input$bin+1), xlab = names(mtcars[colm]))
}
)
output$hist <- renderPlot(
{
colm = as.numeric(input$var)
hist(mtcars[,colm], col =input$color, xlim = c(0, max(mtcars[,colm])), main = "Hisogram of mtcars dataset", breaks =seq(0,max(mtcars[,colm]), l =input$bin+1), xlab = names(mtcars[colm]))
}
)
output$hist <- renderPlot(
{
colm = as.numeric(input$var)
hist(mtcars[,colm], col =input$color, xlim = c(0, max(mtcars[,colm])), main = "Hisogram of mtcars dataset", breaks =seq(0,max(mtcars[,colm]), l =input$bin+1), xlab = names(mtcars[colm]))
}
)
runApp('C:/Users/udaya/OneDrive/Desktop/learning basic.R')
runApp('C:/Users/udaya/OneDrive/Desktop/practice.r')
runApp('C:/Users/udaya/OneDrive/Desktop/learning basic.R')
runApp('C:/Users/udaya/OneDrive/Desktop/learning basic.R')
library(shiny); runApp('master.R')
runApp('master.R')
library(shiny); runApp('master.R')
runApp('master.R')
library(shiny); runApp('selectInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/renderPlot().R')
library(shiny); runApp('master.R')
runApp('master.R')
prod_codes <- setNames(products$prod_code, products$title)
library(ggplot2)
Titanic
titanic <- read.csv("titanic.csv",stringsAsFactors = FALSE)
titanic <- read.csv(""C:\Users\udaya\OneDrive\Desktop\titanic.csv"",stringsAsFactors = FALSE)
titanic <- read.csv("C:\Users\udaya\OneDrive\Desktop\titanic.csv",stringsAsFactors = FALSE)
titanic <- read.csv("C:\\Users\\udaya\\OneDrive\\Desktop\\titanic.csv",stringsAsFactors = FALSE)
titanic
titanic
View(titanic)
titanic <- read.csv("titanic.csv",stringsAsFactors = FALSE)
titanic <- read.csv("C:\\Users\\udaya\\OneDrive\\Desktop\\practice\\CATS_Practice\\udaya\\ggplot2",stringsAsFactors = FALSE)
titanic <- read.csv("C:\\Users\\udaya\\OneDrive\\Desktop\\practice\\CATS_Practice\\udaya\\ggplot2",stringsAsFactors = FALSE)
titanic <- read.csv("C:\\Users\\udaya\\OneDrive\\Desktop\\practice\\CATS_Practice\\udaya\\ggplot2\\titanic.csv",stringsAsFactors = FALSE)
titanic
View(titanic)
titanic$Pclass <- as.factor(titanic$Pclass)
titanic$Survived <- as.factor(titanic$Survived)
titanic$Sex <- as.factor(titanic$Sex)
titanic$Embarked <- as.factor(titanic$Embarked)
ggplot(titanic, aes(x = Survived))+
geom_bar()
prop.table(table(titanic$Survived))
clear
ggplot(titanic, aes(x = Survived))+
theme_classic() +
geom_bar() +
labs(y = "Passenger Count", title = "Titanic Survival Rates")
ggplot(titanic, aes(x = Sex, fill = Survived))+
theme_classic() +
geom_bar() +
labs(y = "Passenger Count", title = "Titanic Survival Rates by Sex")
ggplot(titanic, aes(x = Pclass, fill = Survived))+
theme_classic() +
geom_bar() +
labs(y = "Passenger Count", title = "Titanic Survival Rates by Passenger Class")
ggplot(titanic, aes(x = Sex, fill = Survived))+
theme_classic() +
facet_wrap(-Pclass)
ggplot(titanic, aes(x = Sex, fill = Survived))+
theme_classic() +
facet_wrap(Pclass)
ggplot(titanic, aes(x = Sex, fill = Survived))+
theme_classic() +
facet_wrap(~ Pclass)+
geom_bar() +
labs(y = "Passenger Count", title = "Titanic Survival Rates by Pclass and Sex")
ggplot(titanic, aes(x = Sex, fill = Survived))+
theme_classic() +
facet_wrap( Pclass)+
geom_bar() +
labs(y = "Passenger Count", title = "Titanic Survival Rates by Pclass and Sex")
ggplot(titanic, aes(x = Sex, fill = Survived))+
theme_classic() +
facet_wrap(Pclass)+
geom_bar() +
labs(y = "Passenger Count", title = "Titanic Survival Rates by Pclass and Sex")
ggplot(titanic, aes(x = Sex, fill = Survived))+
theme_classic() +
facet_wrap(~ Pclass)+
geom_bar() +
labs(y = "Passenger Count", title = "Titanic Survival Rates by Pclass and Sex")
ggplot(titanic, aes(x = Age)) +
theme_classic() +
geom_histogram(binwidth = 5) +
labs(y = "Passenger Count",
x = "Age (binwidth = 5)",
title = "Titanic Dataset Age Distribtion")
ggplot(titanic, aes(x = Age, fill = Survived)) +
theme_classic() +
geom_histogram(binwidth = 5) +
labs(y = "Passenger Count",
x = "Age (binwidth = 5)",
title = "Survival Rates by Age")
ggplot(titanic, aes(x = Survived, y = Age)) +
theme_classic() +
geom_boxplot() +
labs(y = "Age",
x = "Survived",
title = "Titanic Survival Rates by Age")
ggplot(titanic, aes(x = Survived, y = Age)) +
theme_classic() +
geom_boxplot() +
labs(y = "Age",
x = "Survived",
title = "Survival Rates by Age; plotted using boxplot")
ggplot(titanic, aes(x = Age, fill = Survived)) +
theme_classic() +
facet_wrap(Sex ~ Pclass) +
geom_density(alpha = 0.5) +
labs(y = "Age",
x = "Survived",
title = "Survival Rates by Age, Pclass and Sex")
ggplot(titanic, aes(x = Age, fill = Survived)) +
theme_classic() +
facet_wrap(Sex ~ Pclass) +
geom_histogram(binwidth = 5) +
labs(y = "Age",
x = "Survived",
title = "Titanic Survival Rates by Age, Pclass and Sex")
library(shiny); runApp('C:/Users/udaya/OneDrive/Desktop/practice/CATS_Practice/udaya/download/download_file.R')
runApp('C:/Users/udaya/OneDrive/Desktop/practice/CATS_Practice/udaya/download/download_file.R')
runApp('C:/Users/udaya/OneDrive/Desktop/practice/CATS_Practice/udaya/download/download_file.R')
runApp('C:/Users/udaya/OneDrive/Desktop/practice/CATS_Practice/udaya/download/download_file.R')
library(shiny); runApp('C:/Users/udaya/OneDrive/Desktop/practice/CATS_Practice/udaya/download/download_file.R')
ui <- fluidPage(
titlePanel("Practicing RenderUI in R Shiny"),
sidebarLayout(
sidebarPanel(
selectInput("data", "Select the dataset you want to plot", choices = c("iris", "mtcars", "trees"))
),
mainPanel()
)
)
runApp('C:/Users/udaya/OneDrive/Desktop/renderUI.R')
runApp('C:/Users/udaya/OneDrive/Desktop/renderUI.R')
runApp('C:/Users/udaya/OneDrive/Desktop/renderUI.R')
library(shiny); runApp('C:/Users/udaya/OneDrive/Desktop/fileInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/gem/fileInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/gem/fileInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/gem/fileInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/gem/fileInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/gem/fileInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/gem/fileInput.R')
runApp('C:/Users/udaya/OneDrive/Desktop/gem/fileInput.R')
library(shiny); runApp('C:/Users/udaya/OneDrive/Desktop/image_video/image_video.R')
runApp('C:/Users/udaya/OneDrive/Desktop/image_video/image_video.R')
runApp('C:/Users/udaya/OneDrive/Desktop/image_video/image_video.R')
runApp('C:/Users/udaya/OneDrive/Desktop/image_video/image_video.R')
runApp('C:/Users/udaya/OneDrive/Desktop/image_video/image_video.R')
install.packages("rhansontable")
library(shiny); runApp('C:/Users/udaya/OneDrive/Desktop/rhandsontable/rhandsontable.R')
runApp('C:/Users/udaya/OneDrive/Desktop/rhandsontable/rhandsontable.R')
runApp('C:/Users/udaya/OneDrive/Desktop/rhandsontable/rhandsontable.R')
install.packages("shinydashboard")
library(shiny)
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Practicing shinydashboard package", titleWidth = 500),
dashboardSidebar("This is a sidebar"),
dashboardBody("This is the body of the dashbaord")
)
runApp('C:/Users/udaya/OneDrive/Desktop/shinydashboard/shinydashboard.R')
libarary(shiny)
library(shinydashboard)
library(plotly)
install.packages("plotly")
library(plotly)
library(datasets)
ui<- dashboardPage(
dashboardHeader(title = "Practicing to create a box using shinydashboard package", titleWidth = 600),
dashboardSidebar(
sidebarMenu(
menuItem("box",tabName = "box", icon = icon("check"))
)
),
dashboardBody(
tabItems(
tabItem(tabName = "box",
fluidRow(box(title = "Creating a box with a plot", plotlyOutput("plot1",height = 250)),
box(title = "Creating a box with a plot", plotlyOutput("plot2",height = 250))),
fluidRow(box(title = "Creating box with a datatable", tableOutput("data"),width = 8),
box(title = "Creating box with input widget", uiOutput("inputwidget"),width = 8))
)
)
)
)
libarary(shiny)
library(shiny)
source("C:/Users/udaya/OneDrive/Desktop/box.R")
runApp('C:/Users/udaya/OneDrive/Desktop/box.R')
runApp('C:/Users/udaya/OneDrive/Desktop/box.R')
source("C:/Users/udaya/OneDrive/Desktop/box.R")
runApp('C:/Users/udaya/OneDrive/Desktop/box.R')
source("C:/Users/udaya/OneDrive/Desktop/box.R")
runApp('C:/Users/udaya/OneDrive/Desktop/box.R')
source("C:/Users/udaya/OneDrive/Desktop/box.R")
runApp('C:/Users/udaya/OneDrive/Desktop/box.R')
library(shiny)
library(shinydashboard)
library(plotly)
library(datasets)
runApp('C:/Users/udaya/OneDrive/Desktop/box.R')
source("C:/Users/udaya/OneDrive/Desktop/box.R")
runApp('C:/Users/udaya/OneDrive/Desktop/box.R')
source("C:/Users/udaya/OneDrive/Desktop/box.R")
runApp('C:/Users/udaya/OneDrive/Desktop/box.R')
source("C:/Users/udaya/OneDrive/Desktop/box.R")
runApp('C:/Users/udaya/OneDrive/Desktop/box.R')
